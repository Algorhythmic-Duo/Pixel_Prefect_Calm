(()=>{"use strict";var e={437:(e,t,n)=>{n.d(t,{Z:()=>c});var i=n(81),r=n.n(i),o=n(645),s=n.n(o),a=n(55),l=s()(r());l.i(a.Z),l.push([e.id,".truemed-entry-box{gap:6px;justify-content:flex-start}.truemed-entry-link{font-weight:600;text-decoration-line:underline}",""]);const c=l},24:(e,t,n)=>{n.d(t,{Z:()=>a});var i=n(81),r=n.n(i),o=n(645),s=n.n(o)()(r());s.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,400;0,500;0,600;0,700;1,400;1,500;1,600;1,700&family=Source+Sans+Pro:ital,wght@0,400;0,600;0,700;0,900;1,400;1,600;1,700;1,900&display=swap);"]),s.push([e.id,'.truemed-instructions{font-family:sans-serif}truemed-instructions-modal{display:none;font-family:Source Sans Pro,sans-serif;inset:0;margin:0;position:fixed;z-index:1000001}.truemed-logo-img{height:var(--height);margin:0 0 0 3px;object-fit:fill;position:relative;right:-1px;top:-1px;vertical-align:baseline;width:auto}.truemed-instructions-overlay{align-items:center;background-color:rgba(52,52,52,.5);border-style:solid;border-width:0;box-sizing:border-box;flex-shrink:0;left:0;min-height:0;min-width:0;overflow:hidden;position:absolute;top:0;z-index:999}.truemed-instructions-box,.truemed-instructions-overlay{display:flex;flex-direction:column;height:100%;width:100%}.truemed-instructions-box{justify-content:center;max-width:560px;min-height:80vh;padding-bottom:0;padding-top:0}.tm-spinner{animation:rotate 2s linear infinite;height:50px;left:50%;margin:-25px 0 0 -25px;position:absolute;top:50%;width:50px;z-index:2;& .path{stroke:hsla(204,8%,76%,.9);stroke-linecap:round;animation:dash 1.5s ease-in-out infinite}}#spinner-container{align-items:center;background-color:rgba(52,52,52,.5);display:flex;justify-content:center}#error-message-container{align-items:center;display:none;justify-content:center;padding:16 24;text-align:center}.email-link-text,.error-message-text{text-size-adjust:none;color:#0e0e0f;font-size:16px;letter-spacing:0;line-height:20px}.email-link-text{color:#2650cb}@keyframes rotate{to{transform:rotate(1turn)}}@keyframes dash{0%{stroke-dasharray:1,150;stroke-dashoffset:0}50%{stroke-dasharray:90,150;stroke-dashoffset:-35}to{stroke-dasharray:90,150;stroke-dashoffset:-124}}.truemed-instructions-header{align-items:stretch;background-color:#fff;border-style:solid;border-top-left-radius:10px;border-top-right-radius:10px;border-width:0;border-left:1px solid #edf2f7;border-right:1px solid #edf2f7;border-top:1px solid #edf2f7;box-sizing:border-box;display:flex;flex-direction:row;flex-shrink:0;height:60px;justify-content:flex-start;margin-top:10px;min-height:0;min-width:0;padding-left:24px;position:relative;width:100%;z-index:0}.truemed-instructions-header>div{align-items:center;display:flex;flex-direction:column;justify-content:center}.truemed-instructions-text{text-size-adjust:none;color:#0e0e0f;flex:1;font-size:16px;letter-spacing:0;line-height:20px;margin-bottom:10px;margin-top:0;max-width:100%}.truemed-instructions-close-button{background:none;border:none;cursor:pointer;margin:20px;padding:0;position:absolute;right:0}.truemed-instructions-close-button>div{align-items:stretch;border-style:solid;border-width:0;box-sizing:border-box;display:flex;flex-direction:column;flex-shrink:0;height:20px;min-height:0;min-width:0;position:relative;width:20px;z-index:0}.truemed-instructions-close{-webkit-tap-highlight-color:rgba(255,255,255,0);background-color:#2650cb;border:hsla(0,0%,100%,0);border-radius:5px;color:#fff;cursor:pointer;font-size:18px;height:50px;margin:0;outline:none;padding:0}.truemed-instructions-container{align-items:stretch;background:#f7f7f6;border-bottom-left-radius:10px;border-bottom-right-radius:10px;border-style:solid;border-width:0;box-sizing:border-box;display:flex;flex-direction:column;height:60vh;min-height:0;min-width:0;overflow-y:auto;overflow:"hidden";width:100%}#truemed-instructions-iframe{border:0;display:none;height:100%}@media (max-width:767px){.truemed-instructions-header{margin-top:0}.truemed-instructions-box{min-height:100vh;min-width:100vw}.truemed-instructions-container{height:100%}}',""]);const a=s},55:(e,t,n)=>{n.d(t,{Z:()=>a});var i=n(81),r=n.n(i),o=n(645),s=n.n(o)()(r());s.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Inter:wght@100..900&display=swap);"]),s.push([e.id,".truemed-entry-box {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  font-family: 'Inter', sans-serif;\n}\n\n.truemed-entry-text-container {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: 6px;\n}\n\n.truemed-entry-logo {\n  width: 15px;\n  height: 15px;\n}\n\n.truemed-entry-text {\n  color: var(--truemed-text-color);\n  font-size: 12px;\n}\n\n.truemed-entry-text-bold {\n  font-weight: 700;\n}\n\n.truemed-entry-link {\n  color: var(--truemed-link-color);\n  background: none;\n  border: none;\n  padding: 0;\n  margin: 0;\n  text-align: center;\n  font-size: 12px;\n  cursor: pointer;\n  letter-spacing: 0.02em;\n}\n\n.truemed-entry-link:focus-visible,\n.truemed-entry-link:hover {\n  color: var(--truemed-link-hover-color);\n}\n",""]);const a=s},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",i=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),i&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),i&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,i,r,o){"string"==typeof e&&(e=[[null,e,void 0]]);var s={};if(i)for(var a=0;a<this.length;a++){var l=this[a][0];null!=l&&(s[l]=!0)}for(var c=0;c<e.length;c++){var d=[].concat(e[c]);i&&s[d[0]]||(void 0!==o&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=o),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),t.push(d))}},t}},81:e=>{e.exports=function(e){return e[1]}}},t={};function n(i){var r=t[i];if(void 0!==r)return r.exports;var o=t[i]={id:i,exports:{}};return e[i](o,o.exports,n),o.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var i in t)n.o(t,i)&&!n.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e=n(24);class t{static init(e=!1){this.debuggingEnabled=e}static log(e,...t){this.debuggingEnabled&&console.log(e,...t)}static warn(e,...t){this.debuggingEnabled&&console.warn(e,...t)}static error(e,...t){this.debuggingEnabled&&console.error(e,...t)}static debuggingEnabled=!1}const i=e=>{const t={element:document.querySelector(e),elements:document.querySelectorAll(e),html:e=>{if(!e)return t.element;t.element&&t.element.setHTML(e)},append:e=>{t.element&&t.element.append(e)},on:(e,n)=>{t.elements.length>1?t.elements.forEach((function(t){"true"!==t.getAttribute("listener")&&(t.setAttribute("listener","true"),t.addEventListener(e,n))})):t.element&&t.element.addEventListener(e,n)},removeEvent:(e,n)=>{t.element&&t.element.removeEventListener(e,n)},remove:()=>{t.element&&t.element.remove()},hide:()=>{t.element&&(t.element.style.display="none")},show:()=>{t.element&&(t.element.style.display="block")},focus:()=>{t.element&&t.element.focus()},attr:(e,n)=>{if(null==n){if(t.element)return t.element.getAttribute(e)}else t.element&&t.element.setAttribute(e,n)},hasAttr:e=>{if(t.element)return t.element.hasAttribute(e)}};return t};let r=null,o=[];const s=e=>{if(t.log("Recording pixel event",e),!localStorage.getItem("tm-identifier"))return t.log("Identity UUID not available. Queuing pixel event",e),o.push(e),void(r||(r=setTimeout(a,6e3)));t.log("Identity UUID available. Appending pixel event",e),l(e)},a=()=>{t.log("Flushing pixel event queue"),o.forEach((e=>{t.log("Appending queued widget pixel",e),l(e)})),o=[],clearInterval(r),r=null},l=e=>{if(t.log("Appending widget pixel to body",e),i(`#${e}`).element)return void t.log("Pixel already exists on the page. Exiting.",e);t.log("Pixel does not exist on the page. Appending",e);const n=document.createElement("div");n.id=e,n.className="truemed-pixel",n.style.height="1px",n.style.width="1px",n.style.overflow="hidden",n.innerHTML=c(e),i("body").append(n),t.log("Appended widget pixel to body",e)},c=e=>{let n="generic",i="unknown";"undefined"!=typeof window&&void 0!==window.location&&void 0!==window.location.host&&window.location.host.length>0&&(n=window.location.host,void 0!==window.location.pathname&&(i=window.location.pathname.replace(/[^a-zA-Z0-9-_]/g,"_")));let r,o=(Math.random()+1).toString(36).substring(7);const s=localStorage.getItem("tm-identifier");t.log("Found Identity UUID while creating pixel element",s);const a=localStorage.getItem("sales_channel_type"),l=[s?`id=${s}`:"",a?`scType=${a}`:""].join("&");return r=`https://api.truemed.com/promo/icon/${n}/${i}/${e}/pixel/1_1/${o}.gif${l?`?${l}`:""}`,`<img alt="" src="${r}" height="1px" width="1px" style="opacity:.01;" />`},d=e=>{if(t.log("Received message from identity iframe",e.data),"TM-IDENTITY-CREATED"===e.data.type){let n=e.data.truemedId;localStorage.setItem("tm-identifier",n),t.log("Stored identity UUID in local storage",n),window.removeEventListener("message",d),t.log("Removed message event listener"),t.log("Removed identity iframe");let i=document.getElementById("identity-iframe");i&&i.parentNode&&i.parentNode.removeChild(i)}};class u{static init(e=(()=>{})){if(!u.onCartChangeCallback&&void 0!==window.Shopify)return u.onCartChangeCallback=e,u.observeCartChanges(),u}static observeCartChanges(){void 0!==window.Shopify&&new PerformanceObserver((e=>{e.getEntries().forEach((e=>{const t=["xmlhttprequest","fetch"].includes(e.initiatorType),n=/\/cart\//.test(e.name);if(t&&n){let t=e.name.split("/").pop(),n=new CustomEvent("cart_changed",{detail:{message:"Cart changed",time:new Date,operation:t}});u.onCartChangeCallback&&u.onCartChangeCallback(n)}}))})).observe({entryTypes:["resource"]})}static onCartChangeCallback=void 0}const m="unknown",g="continue";async function p(){t.log("Handling cart change event"),await h()}async function h(){if(window.Shopify){t.log("Resolving cart state");try{const e=await fetch("/cart.js"),t=await e.json();if(t)return localStorage.setItem("tm_cart",JSON.stringify(t.items)),t?.items}catch(e){t.warn("Error resolving cart state",e),JSON.parse(localStorage.getItem("tm_cart")||"")||t.warn("Error retrieving cart state from local storage",e)}t.log("No cart items found. Exiting resolve function.")}else t.log("No window.Shopify object found. Not resolving cart items.")}function f(){localStorage.setItem("widget_viewed_at",(new Date).toISOString())}async function y(e,n){try{const i=await async function(){t.log("Resolving product tags");try{t.log("Retrieving product tags");const e=await fetch(`${window.location.pathname}.js`),n=await e.json();if(n)return n?.tags;t.log("Returning stored product tags")}catch(e){t.warn("Error resolving product tags",e)}t.log("No product tags found. Exiting resolve function.")}();return!i||0==i.length||(i.some((t=>t.toLowerCase()==e))?n:!n)}catch(e){t.warn("Error finding product tag",e)}return!0}const w={lightMode:{"--truemed-text-color":"#000000bf","--truemed-link-color":"#3c3c3c","--truemed-link-hover-color":"#179895"},darkMode:{"--truemed-text-color":"#fff","--truemed-link-color":"#fff","--truemed-link-hover-color":"#179895"}};var v=n(437);const b=()=>{t.log("Closing Truemed instructions widget"),i("#spinner-container").element&&i("#error-message-container").element&&(i("#spinner-container").element.style.display="flex",i("#error-message-container").element.style.display="none"),i("#truemed-instructions-iframe").remove(),i("truemed-instructions-modal").hide(),i(".truemed-instructions-open").focus(),i("html").element.style.overflow=null},x=e=>{[`instruction_widget_view_v${e}`,`instruction_widget_opened_v${e}`,`instruction_widget_continue_clicked_v${e}`,`instruction_widget_checkout_clicked_v${e}`,`instruction_widget_checkout_active_viewed_v${e}`,`instruction_widget_large_entry_point_v${e}`,`instruction_widget_small_entry_point_v${e}`].forEach((e=>i(`#${e}`)?.remove()))},_=(e,n)=>async()=>{if("block"===i("truemed-instructions-modal").element?.style?.display)return;i("html").element.style.overflow="hidden",t.log("Opening Truemed instructions widget"),i("truemed-instructions-modal").show(),i(".truemed-instructions-header").focus();const r=document.getElementById(`truemed-instructions-${e}`).getAttribute("data-public-id");if(!r)return void console.error('Please add data-public-id attribute to the div with id "truemed-instructions" element.');const[o,s]=await async function(){if(!window.Shopify)return[m,g];try{const e=await async function(){const e=JSON.parse(localStorage.getItem("tm_cart")||"");return e&&e.length>0?e:h()}();return e?e&&e.length>0?e.some((e=>e.selling_plan_allocation))?["subscription",g]:["nonSubscription","checkoutWithTM"]:["empty",g]:[m,g]}catch(e){t.warn("Error retrieving cart state from local storage",e)}return[m,g]}();let a=`https://app.truemed.com/widget/v${n}/${r}?success_action=${s}&cart_type=${o}`;if(a.includes("utm=")||(a+=a.includes("?")?"&utm=instructions-widget":"?utm=instructions-widget"),!i("#truemed-instructions-iframe").element){t.log("Loading Truemed instructions iframe with link: ",a);const e=(e=>{const t=document.createElement("iframe");return t.setAttribute("id","truemed-instructions-iframe"),t.setAttribute("allow","fullscreen"),t.setAttribute("title","Truemed Instructions"),t.src=e,t.onload=function(){i("#spinner-container").element.style.display="none",i("#truemed-instructions-iframe").element.style.display="block"},t.onerror=function(){console.error("Error loading Truemed instructions. Please try again later."),i("#error-message-container").element.style.display="block",i("#spinner-container").element.style.display="none"},t})(a);i("#truemed-instructions-container").append(e);const n=await(async e=>{if(!window.Shopify)return t.log("No window.Shopify object found. Not appending cart state."),e;try{const t=await fetch("/cart.js"),n=await t.json(),i=((e,t)=>200===e?t?.items?.length>0?"nonEmpty":"empty":"unknown")(t.status,n);return e.includes("cart_state=")?e:`${e}&cart_state=${i}`}catch(n){return t.error("Failed to update iframe link:",n),e}})(e.src);e.setAttribute("src",n)}},k=(e,n)=>{const r=(e=>()=>{b(),x(e)})(n);i(".truemed-instructions-close").on("click",r),i(".truemed-instructions-close-button").on("click",r),i(".truemed-instructions-open").on("click",_(e,n)),i(".truemed-instructions-box").on("mouseover",(()=>{i(".truemed-instructions-box").attr("class","truemed-instructions-box truemed-focused")})),i(".truemed-instructions-box").on("mouseout",(()=>{i(".truemed-instructions-box").attr("class","truemed-instructions-box")})),i(".truemed-instructions-overlay").on("click",((e,t)=>()=>{i(".truemed-instructions-box.truemed-focused").element||t(e)})(n,r)),window.addEventListener("message",(e=>n=>{const{type:i,salesChannelType:r}=n?.data||{};switch(i){case"SALES_CHANNEL_TYPE":localStorage.setItem("sales_channel_type",r),s(`instruction_widget_opened_v${e}`);break;case"ACTIVE_CHECKOUT_BUTTON_VIEWED":s(`instruction_widget_checkout_active_viewed_v${e}`);break;case"CONTINUE_SHOPPING":s(`instruction_widget_continue_clicked_v${e}`),f(),b(),x(e);break;case"CHECKOUT_WITH_TM":s(`instruction_widget_checkout_clicked_v${e}`),f(),b(),x(e);try{!function(){const e=JSON.parse(localStorage.getItem("tm_cart")||"");if(e&&e.length>0){const e=window.location.hostname,n=`${window.location.protocol}//${e}/checkout?origin=shop_pay_c1&shop_pay_checkout_as_guest=true&skip_shop_pay=true`;window.location.href=n,t.log("Navigating to checkout",n)}}()}catch(e){t.warn("Unable to redirect user to checkout",e)}}})(n))},E=async(e,n,r,o)=>{if((e=>{const t=i("#truemed-prequalify"),n=i("#truemed-instructions");return t.element&&(t.attr("class","truemed-instructions"),t.attr("id",`truemed-instructions-${e}`)),n.element&&(n.attr("class","truemed-instructions"),n.attr("id",`truemed-instructions-${e}`)),t.elements&&t.elements.length>0||n.elements&&n.elements.length>0})(e)&&await async function(e){if(!window.Shopify)return!0;const n=await async function(){try{const e=await async function(){if(window.Shopify){t.log("Resolving cart currency");try{const e=await fetch("/cart.js"),t=await e.json();if(t)return t?.currency}catch(e){t.warn("Error resolving cart currency",e)}t.log("No cart currency found. Exiting resolve function.")}else t.log("No window.Shopify object found. Not resolving cart currency.")}();return!e||"USD"==e}catch(e){t.warn("Error finding cart currency",e)}return!0}();let r=!0;return"display-if-eligible"==i(e).attr("shopify-tags")?r=await y("truemed-eligible",!0):"display-unless-ineligible"==i(e).attr("shopify-tags")&&(r=await y("truemed-ineligible",!1)),n&&r}(`#truemed-instructions-${e}`)){var a;if(((e,t,n)=>{s(n??"instruction_widget_small_entry_point"+(t?`_v${t}`:"")),(e=>{const t=document.querySelector(":root"),n=i(`#truemed-instructions-${e}`).hasAttr("dark-mode"),{darkMode:r,lightMode:o}=w;var s;s=n?r:o,Object.keys(s).forEach((e=>{t.style.setProperty(e,s[e])}))})(e);const r=i(`#truemed-instructions-${e}`).attr("icon-height")||15,o=`\n    <style>\n      ${v.Z.toString()}\n      .truemed-entry-box {\n        --truemed-icon-height: ${r}px;\n      }\n    </style>\n  `;i(".truemed-instructions").elements.forEach((e=>{if(e.querySelector(".truemed-instructions-link-text"))return;const t=document.createElement("div");t.innerHTML=`${o}${'<div class="truemed-entry-box"> <div class="truemed-entry-text-container"> <span class="truemed-instructions-link-text truemed-entry-text truemed-entry-text-bold">Pay with HSA/FSA</span> <svg class="truemed-entry-logo" viewBox="0 0 15 16" fill="none" xmlns="http://www.w3.org/2000/svg" style="height:var(--truemed-icon-height,15px)"> <title>Truemed Logo</title> <path d="M7.43864 3.2601C6.68931 3.2601 6.08187 3.86738 6.08187 4.61653C6.08187 5.36567 6.68931 5.97295 7.43864 5.97295C8.18798 5.97295 8.79542 5.36567 8.79542 4.61653C8.79468 3.86764 8.18765 3.26084 7.43864 3.2601Z" fill="#179895"/> <path fill-rule="evenodd" clip-rule="evenodd" d="M1.33106 3.73625C3.68643 0.329067 8.35872 -0.524118 11.7668 1.83072C15.1717 4.18991 16.023 8.85977 13.6697 12.2683C11.313 15.672 6.64345 16.5229 3.23709 14.1693C-0.170978 11.8145 -1.02438 7.14349 1.33106 3.73625ZM3.14876 12.4838L7.06569 8.39533L1.26302 8.39467C1.27909 8.63859 1.30911 8.88139 1.35295 9.1218C1.58271 10.4035 2.21117 11.58 3.14876 12.4838ZM6.37671 1.85715C3.72545 2.34261 1.68315 4.47098 1.30799 7.13939H13.6842C13.2565 4.05718 10.6238 1.76038 7.51132 1.75404C7.13081 1.75417 6.75101 1.78867 6.37671 1.85715ZM4.14121 13.2658C6.18582 14.5669 8.79788 14.5715 10.8471 13.2776L7.48819 9.77224L4.14121 13.2658ZM12.6389 11.5524C13.2842 10.6192 13.6626 9.5276 13.7332 8.39533L7.90937 8.39798L11.8382 12.4963C12.1353 12.2086 12.4034 11.8923 12.6389 11.5524Z" fill="#179895"/> </svg> <span class="truemed-entry-text">Save an average of 30%</span> </div> <button type="button" aria-label="Learn more about Truemed and how to pay with your HSA or FSA" class="truemed-instructions-open truemed-entry-link"> Learn More </button> </div> '.toString()}`,e.append(t)}))})(e,n),a=`instruction_widget_viewed_v${n}`,Math.random()>=.01||(t.log("Tracking widget view",a),s(a)),!i("truemed-instructions-modal").elements?.length){const e=document.createElement("div");e.innerHTML=`<style>${o}</style>${r}`,i("body").append(e)}k(e,n)}};let S=null;window.TruemedProductPageLib=function(){const n=async()=>{const t=Date.now()+Math.round(100*Math.random());await(async(e,t,n,i)=>{const r=()=>{};await(async()=>{await E(e,t,n,i),null===S&&(await h(),S=u.init(p)),function(){const e=new Date(localStorage.getItem("widget_viewed_at"));e&&Date.now()-e.getTime()>864e5&&localStorage.removeItem("widget_viewed_at")}(),window.addEventListener("beforeunload",r)})()})(t,8,'<truemed-instructions-modal> <div class="truemed-instructions-overlay"> <div class="truemed-instructions-box"> <div class="truemed-instructions-header" tabindex="-1"> <div> <img src="https://static.truemed.com/widgets/truemed-navy.svg" style="width:150px;object-fit:fill" loading="lazy" alt="Truemed logo"/> </div> <button aria-label="Close Truemed modal" class="truemed-instructions-close-button"> <div> <svg aria-hidden="true" focusable="false" role="img" height="20" width="20"> <g transform="translate(0, 0) scale(1)"> <path d="M10.872 10.004c.449-.14.875-.373 1.23-.729l5.602-5.601L16.29 2.26l-5.602 5.601a.999.999 0 01-1.414 0l-5.57-5.57L2.29 3.705l5.57 5.57c.364.364.8.6 1.261.738a2.86 2.86 0 00-1.229.708L2.29 16.322l1.414 1.414 5.603-5.601a1.022 1.022 0 011.413 0l5.57 5.57 1.414-1.414-5.57-5.57a2.869 2.869 0 00-1.262-.717z" fill="rgba(14, 14, 15, 1)"></path> </g> </svg> </div> </button> </div> <div id="truemed-instructions-container" class="truemed-instructions-container"> <div id="spinner-container"> <svg class="tm-spinner" viewBox="0 0 50 50"> <circle class="path" cx="25" cy="25" r="20" fill="none" stroke-width="5"></circle> </svg> </div> <div id="error-message-container" data-nosnippet> <p class="error-message-text"> There was an error loading the Truemed widget. Please try again soon or contact us at <a class="email-link-text" href="mailto:support@truemed.com?subject=Truemed%20widget%20help&body=Hi%20there%2C%0D%0A%0D%0AI%20attempted%20to%20use%20Truemed%20and%20experienced%20a%20problem.%20Help!%0D%0A%0D%0A">support@truemed.com</a>. </p> </div> </div> </div> </div> </truemed-instructions-modal> ',e.Z.toString())};let i=null;const r=e=>{e?(i=new MutationObserver(function(e,t,n){let i;return function(){let t=this,n=arguments,r=!i;clearTimeout(i),i=setTimeout((function(){i=null}),300),r&&e.apply(t,n)}}(n)),i.observe(document,{subtree:!0,childList:!0}),document.addEventListener("DOMContentLoaded",n),"complete"===document.readyState&&n()):n()};return r(!0),(()=>{const e="true"===document.getElementById("truemed-prequalify")?.getAttribute("data-enable-debugging"),n="true"===document.getElementById("truemed-instructions")?.getAttribute("data-enable-debugging");t.init(e||n)})(),(()=>{const e=localStorage.getItem("tm-identifier");if(e)return void t.log("Identity UUID already exists in local storage",e);window.addEventListener("message",d);const n=document.createElement("iframe");n.id="identity-iframe",n.src="https://app.truemed.com/widget/identity-iframe",n.style.display="none",document.body.appendChild(n)})(),{reloadWidget:r}}()})()})();
